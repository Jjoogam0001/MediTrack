services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=patient_service_db'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  patient-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '80:80'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'
      - 'SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/patient_service_db'
      - 'SPRING_DATASOURCE_USERNAME=postgres'
      - 'SPRING_DATASOURCE_PASSWORD=secret'
      - 'SPRING_JPA_HIBERNATE_DDL_AUTO=update'
      - 'SPRING_JPA_SHOW_SQL=true'
      - 'SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true'
      - 'SPRING_JPA_PROPERTIES_HIBERNATE_USE_SQL_COMMENTS=true'
      - 'SPRING_DOCKER_COMPOSE_ENABLED=true'

  prometheus:
    image: prom/prometheus:latest
    depends_on:
      - patient-service
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  postgres-data:
  grafana-storage:
